name: Build APK with Buildozer

on:
  push:
    branches: [ main ]  # Trigger on push to main branch
  pull_request:
    branches: [ main ]  # Optional: Also trigger on PRs

jobs:
  build-apk:
    runs-on: ubuntu-latest  # Buildozer works best on Linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Prevents Git config cleanup issues

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Kivy works well with Python 3.8â€“3.10

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            build-essential \
            libffi-dev \
            libssl-dev

      - name: Install Buildozer and Kivy
        run: |
          pip install --upgrade pip virtualenv
          pip install buildozer kivy

      - name: Initialize Buildozer (generate buildozer.spec if missing)
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Build APK with Buildozer
        run: |
          buildozer android debug
        env:
          # Workaround for GitHub Actions' /tmp size limit
          BUILD_DIR: /tmp/buildozer
          # Optional: Speed up builds by skipping tests
          BUILDODER_OPTIONS: "--profile github_ci"

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: bin/*.apk  # Path where Buildozer saves the APK
